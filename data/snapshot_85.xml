<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="85">
  <HTTPTask id="3380" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/run/siw_portal.url?C06B303C5F624D44BoTZkiU91NfZ1YyMtAundYB8rGDQkGmzVN8c1qDgOzjge98xNTT3gS0gmhQUR6IqEOiZBoQFdhzb14EFJ7I4gmbv_A3VUXevSmfddQucI3k" url="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/run/siw_portal.url?C06B303C5F624D44BoTZkiU91NfZ1YyMtAundYB8rGDQkGmzVN8c1qDgOzjge98xNTT3gS0gmhQUR6IqEOiZBoQFdhzb14EFJ7I4gmbv_A3VUXevSmfddQucI3k" ip="129.128.12.43" port="443" connectionId="43" origin="Primary" frame="1" startDateTime="2018-10-18T20:32:39.155-04:00" startTime="4672312" endTime="4672312">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>QzA2QjMwM0M1RjYyNEQ0NEJvVFpraVU5MU5mWjFZeU10QXVuZFlCOHJHRFFrR216Vk44YzFxRGdPempnZTk4eE5UVDNnUzBnbWhRVVI2SXFFT2laQm9RRmRoemIxNEVGSjdJNGdtYnZfQTNWVVhldlNtZmRkUXVjSTNr</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>QzA2QjMwM0M1RjYyNEQ0NEJvVFpraVU5MU5mWjFZeU10QXVuZFlCOHJHRFFrR216Vk44YzFxRGdPempnZTk4eE5UVDNnUzBnbWhRVVI2SXFFT2laQm9RRmRoemIxNEVGSjdJNGdtYnZfQTNWVVhldlNtZmRkUXVjSTNr</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="User-Agent" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksKi8qO3E9MC44</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9TSVdfTEdO</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RVZJU0lPTkxPR0lOTEFORz07IEVWSVNJT05MT0dJTkhUVj07IEVWSVNJT05JRD1DMjNDNzcyOUEwNzA0NUUxODgzMTc5NkY2QUEwMjEzRTsgSlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="DNT" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Upgrade-Insecure-Requests" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9ydW4vc2l3X3BvcnRhbC51cmw/QzA2QjMwM0M1RjYyNEQ0NEJvVFpraVU5MU5mWjFZeU10QXVuZFlCOHJHRFFrR216Vk44YzFxRGdPempnZTk4eE5UVDNnUzBnbWhRVVI2SXFFT2laQm9RRmRoemIxNEVGSjdJNGdtYnZfQTNWVVhldlNtZmRkUXVjSTNrIEhUVFAvMS4xDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4wDQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LCovKjtxPTAuOA0KQWNjZXB0LUxhbmd1YWdlOiBlbi1HQixlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpSZWZlcmVyOiBodHRwczovL2dyYWR1YXRlLXN0dWRpZXMtYXBwbHktdGVzdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL1NJV19MR04NCkNvb2tpZTogRVZJU0lPTkxPR0lOTEFORz07IEVWSVNJT05MT0dJTkhUVj07IEVWSVNJT05JRD1DMjNDNzcyOUEwNzA0NUUxODgzMTc5NkY2QUEwMjEzRTsgSlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAwDQpETlQ6IDENClVwZ3JhZGUtSW5zZWN1cmUtUmVxdWVzdHM6IDENCkhvc3Q6IGdyYWR1YXRlLXN0dWRpZXMtYXBwbHktdGVzdC51YWxiZXJ0YS5jYQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="EVISIONLOGINLANG" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData />
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="EVISIONLOGINHTV" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData />
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="EVISIONID" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QzIzQzc3MjlBMDcwNDVFMTg4MzE3OTZGNkFBMDIxM0U=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="JSESSIONID" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>22312</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Cache-Control" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGVueSxTQU1FT1JJR0lO</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVJSLzMuMCxBU1AuTkVU</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjIzMTI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD1VVEYtOA0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KRXhwaXJlczogVGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KWC1GcmFtZS1PcHRpb25zOiBkZW55LFNBTUVPUklHSU4NClgtQ29udGVudC1UeXBlLU9wdGlvbnM6IG5vc25pZmYNClgtWFNTLVByb3RlY3Rpb246IDE7IG1vZGU9YmxvY2sNClgtUG93ZXJlZC1CeTogQVJSLzMuMCxBU1AuTkVUDQpEYXRlOiBGcmksIDE5IE9jdCAyMDE4IDAwOjMyOjE0IEdNVA0KQ29udGVudC1MZW5ndGg6IDIyMzEyDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="4672312" offset="0" length="388" />
        <PacketInfo time="4672312" offset="388" length="22312" />
      </TcpPackets>
    </HTTPResponse>
    <HTTPTask id="3385" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/javascript/settings.js?v=881.2" url="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/javascript/settings.js?v=881.2" ip="129.128.12.43" port="443" connectionId="44" origin="HTML" frame="1" startDateTime="2018-10-18T20:32:39.287-04:00" startTime="4672671" endTime="4672671">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dj04ODEuMg==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="v" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ODgxLjI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2s=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9qYXZhc2NyaXB0L3NldHRpbmdzLmpzP3Y9ODgxLjIgSFRUUC8xLjENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBydjo2Mi4wKSBHZWNrby8yMDEwMDEwMSBGaXJlZm94LzYyLjANCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLUdCLGVuO3E9MC41DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNClJlZmVyZXI6IGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9ydW4vc2l3X3BvcnRhbC51cmw/QzA2QjMwM0M1RjYyNEQ0NEJvVFpraVU5MU5mWjFZeU10QXVuZFlCOHJHRFFrR216Vk44YzFxRGdPempnZTk4eE5UVDNnUzBnbWhRVVI2SXFFT2laQm9RRmRoemIxNEVGSjdJNGdtYnZfQTNWVVhldlNtZmRkUXVjSTNrDQpDb29raWU6IEpTRVNTSU9OSUQ9Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU7IEJJR2lwU2VydmVyU0lUUy1UZXN0LmFwcH5TSVRTLVRlc3RfcG9vbD0xMzEwODU3OTAwLjM2ODk1LjAwMDA7IEJJR2lwU2VydmVyU2hhcmVkSUlTLURFVj03NzM5ODY5ODguMjA0ODAuMDAwMA0KRE5UOiAxDQpIb3N0OiBncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2ENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>2217</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAyOCBKdWwgMjAxNiAxNzozODo1NiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjAzODNlZWFmNmU4ZDExOjAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0FNRU9SSUdJTg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjIxNw==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkxhc3QtTW9kaWZpZWQ6IFRodSwgMjggSnVsIDIwMTYgMTc6Mzg6NTYgR01UDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KRVRhZzogIjAzODNlZWFmNmU4ZDExOjAiDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNClNlcnZlcjogTWljcm9zb2Z0LUlJUy84LjUNClgtUG93ZXJlZC1CeTogQVNQLk5FVA0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpEYXRlOiBGcmksIDE5IE9jdCAyMDE4IDAwOjMyOjE0IEdNVA0KQ29udGVudC1MZW5ndGg6IDIyMTcNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ly8gRGVmaW5lcyB0aGUgc3BlZWQgb2YgYW5pbWF0aW9ucyBpbiBtaWxsaXNlY29uZHMgKG1zKS4NCi8vIFRoZSBzdHJpbmdzICJmYXN0IiAoMjAwbXMpIGFuZCAic2xvdyIgKDYwMG1zKSBjYW4gYWxzbyBiZSB1c2VkLg0KLy8gRGVmYXVsdCB2YWx1ZSBpcyAxMDAuDQp2YXIgc2l0c19hbmltX3NwZWVkID0gMTAwOw0KDQovLyBEZWZpbmVzIHRoZSBwb2ludCBhdCB3aGljaCB0aGUgeWVhciAiMjAiIGlzIHRyZWF0ZWQgYXMgMTkyMCBpbnN0ZWFkIG9mIDIwMjAuDQovLyBUaGlzIHNob3VsZCBiZSB0aGUgc2FtZSBhcyB0aGUgYXNzaWdubWVudCBmaWxlIHNldHRpbmcgJENFTlRVUllfQlJFQUsuDQovLyBEZWZhdWx0IHZhbHVlIGlzIDIwLg0KdmFyIHNpdHNfY2VudHVyeV9icmVhayA9IDIwOw0KDQovLyBEZWZpbmVzIHdoZXRoZXIgb3Igbm90IGEgQ29udGVudCBEZWxpdmVyeSBOZXR3b3JrIChDRE4pIHNob3VsZCBiZSB1c2VkIChhZGRlZCBpbiA4NzAuMSkuDQovLyBVc2luZyBvbmUgY2FuIHNwZWVkIHVwIHRoZSBwZXJmb3JtYW5jZSwgZXNwZWNpYWxseSBmb3IgdXNlcnMgaW4gb3RoZXIgY291bnRyaWVzLg0KLy8gRGVmYXVsdCB2YWx1ZSBpcyAwLg0KLy8gVmFsaWQgdmFsdWVzOg0KLy8gICAwID0gVXNlIGxvY2FsIGZpbGVzIChubyBDRE4pDQovLyAgIDEgPSBqUXVlcnkgQ0ROIC0gcHJvdmlkZWQgYnkgTWF4Q0ROICh0aGUgb2ZmaWNpYWwgalF1ZXJ5IG9uZSkNCi8vICAgMiA9IEdvb2dsZSBBUEkgQ0ROIC0gcHJvdmlkZWQgYnkgR29vZ2xlIChnZW5lcmFsbHkgY29uc2lkZXJlZCB0byBiZSBmYXN0ZXN0IGFuZCBtb3N0IHBvcHVsYXIpDQovLyAgIDMgPSBNaWNyb3NvZnQgQWpheCBDRE4gLSBwcm92aWRlZCBieSBNaWNyb3NvZnQNCi8vICAgNCA9IENsb3VkIEZsYXJlIENETiAtIHByb3ZpZGVkIGJ5IENsb3VkIEZsYXJlDQp2YXIgc2l0c19qcXVlcnlfY2RuID0gMDsNCg0KLy8gRGVmaW5lcyB0aGUgZm9ybWF0IG9mIGRhdGVzIHNlbGVjdGVkIGJ5IGEgZGF0ZSBwaWNrZXIgKGFkZGVkIGluIDg3MC4xKQ0KLy8gVGhpcyBtdXN0IGJlIGNvbXBhdGlibGUgd2l0aCB0aGUgc3lzdGVtIE5hdGlvbmFsIExhbmd1YWdlIFN1cHBvcnQgKE5MUykgc2V0dGluZ3MNCi8vIFNlZSBqUXVlcnkgVUkgd2Vic2l0ZSBmb3Igc3ludGF4IGRldGFpbHMgLSBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kYXRlcGlja2VyLyN1dGlsaXR5LWZvcm1hdERhdGUNCi8vIERlZmF1bHQgdmFsdWUgaXMgImRkL00veXkiLCBpZTogIjAxL0phbi8yMDAxIi4NCnZhciBzaXRzX2RhdGVfZm9ybWF0ID0gImRkL00veXkiDQovLyBHQiAvIFVLID0NCi8vIHZhciBzaXRzX2RhdGVfZm9ybWF0ID0gImQgTSB5eSI7DQovLyBDQSAoQ2FuYWRhKSA9DQovLyB2YXIgc2l0c19kYXRlX2Zvcm1hdCA9ICJ5eS1tbS1kZCI7DQovLyBVUyAoVVNBKSA9DQovLyB2YXIgc2l0c19kYXRlX2Zvcm1hdCA9ICJNIGQsIHl5IjsNCg0KLy8gRGVmaW5lcyB0aGUgZm9ybWF0IG9mIHRpbWVzIHVzaW5nICZEIG5vdGF0aW9uIChhZGRlZCBpbiA4NzEuMSkNCi8vIFRoaXMgbXVzdCBiZSBjb21wYXRpYmxlIHdpdGggdGhlIHN5c3RlbSBOYXRpb25hbCBMYW5ndWFnZSBTdXBwb3J0IChOTFMpIHNldHRpbmdzDQovLyBEZWZhdWx0IHZhbHVlIGlzICJIMjpOMiIsIGllOiAwOTozMA0KdmFyIHNpdHNfdGltZV9mb3JtYXQgPSAiSDI6TjIiOw0KDQovLyBEZWZpbmVzIHRoZSBhbHRlcm5hdGl2ZSB0ZXh0IGZvciBkYXRlIHBpY2tlciBidXR0b25zIChhZGRlZCBpbiA4ODAuMSkNCi8vIERlZmF1bHQgdmFsdWUgaXMgIi4uLiINCnZhciBzaXRzX2J1dHRvbl90ZXh0ID0gIi4uLiI7DQoNCi8vIERlZmluZXMgdGhlIG1heGltdW0gZmlsZSBzaXplIGZvciBhIGZpbGUgYmVpbmcgdXBsb2FkZWQgdXNpbmcgdGhlIHBsdXBsb2FkIHBsdWdpbiAoYWRkZWQgaW4gODgwLjEpDQovLyBEZWZhdWx0IHZhbHVlIGlzICIxMG1iIg0KdmFyIHNpdHNfcGx1cGxvYWRfbWF4X3NpemUgPSAiMTBtYiI7DQoNCi8vIERlZmluZXMgdGhlIGNodW5rIHNpemUgZm9yIGZpbGVzIGJlaW5nIHVwbG9hZGVkIHVzaW5nIHRoZSBwbHVwbG9hZCBwbHVnaW4gKGFkZGVkIGluIDg4MC4xKQ0KLy8gRGVmYXVsdCB2YWx1ZSBpcyAiMm1iIg0KdmFyIHNpdHNfcGx1cGxvYWRfY2h1bmtfc2l6ZSA9ICIybWIiOw0KDQovLyBMb2FkIG1pbmlmaWVkIEphdmFzY3JpcHQgcGx1Z2luIGZpbGVzIHdoZXJlIHBvc3NpYmxlIChhZGRlZCBpbiA4ODAuMSkNCi8vIFVzZWQgZm9yIHBsdWdpbnM6IGRhdGF0YWJsZXMsIG1pZ3JhdGUsIG1lbnUsIGNob3NlbiBhbmQgc2l0c2pxdGltZXRhYmxlDQp2YXIgc2l0c191c2VfbWluaWZpZWQgPSB0cnVlOw0KDQovLyBEZWZpbmVzIHRoZSB5ZWFyIHJhbmdlIGF2YWlsYWJsZSBpbiB0aGUgZGF0ZSBwaWNrZXIgKGFkZGVkIGluIDg4MC4xKQ0KLy8gU2VlIGpRdWVyeSBVSSB3ZWJzaXRlIGZvciBzeW50YXggZGV0YWlscyAtIGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2RhdGVwaWNrZXIvI29wdGlvbi15ZWFyUmFuZ2UNCi8vIERlZmF1bHQgdmFsdWUgaXMgIi0xMDA6KzUwIiwgaWU6IDEwMCB5ZWFycyBiZWZvcmUgYW5kIDUwIHllYXJzIGFmdGVyIGN1cnJlbnQgeWVhcg0KdmFyIHNpdHNfeWVhcl9yYW5nZSA9ICItMTAwOis1MCI7DQoNCi8vIERlZmluZXMgdGhlIHJlc3BvbnNpdmUgYnJlYWtwb2ludHMgdG8gdXNlIGluIGU6VmlzaW9uIGluIHNpdHVhdGlvbnMgd2hlcmUgdGhvc2UgZGVmaW5lZCBpbiB0aGUgc3R5bGVzaGVldCBjYW5ub3QgYmUgdXNlZCAoYWRkZWQgaW4gOTEwLjEpDQovLyBUaGlzIGluY2x1ZGVzLCBmb3IgZXhhbXBsZSwgdGhvc2UgdXNlZCBieSB0aGUgUmVzcG9uc2l2ZSBleHRlbnNpb24gZm9yIERhdGF0YWJsZXMgKGFzIHVzZWQgdGhyb3VnaG91dCBlOlZpc2lvbiksIGFuZCBzaG91bGQgbm9ybWFsbHkgbWF0Y2ggdGhvc2UgbWF4aW11bXMgZGVmaW5lZCBpbiBzdi5jc3MuDQovLyBJdCB0YWtlcyB0aGUgZm9ybSBvZiBhbiBvYmplY3QgbGlzdGluZyBlYWNoIGJyZWFrcG9pbnQsIGFuZCBzaG91bGQgaW5jbHVkZSBtYXhpbXVtIHZhbHVlcyAoaW4gcGl4ZWxzKSBmb3IgdGhlIHdpZHRoIHRoYXQgc2hvdWxkIGFwcGx5IGZvciBMYXJnZSAobGcpLCBNZWRpdW0gKG1kKSwgU21hbGwgKHNtKSBhbmQgRXh0cmEgU21hbGwgKHhzKSBzY3JlZW5zaXplcw0KdmFyIHNpdHNfYnJlYWtwb2ludHMgPSB7ImxnIjogSW5maW5pdHksICJtZCI6IDExOTksICJzbSI6IDk5MSwgInhzIjogNzY3fTsNCg0KLy8gRGVmaW5lcyB3aGV0aGVyIHRvIGF1dG9tYXRpY2FsbHkgYXBwbHkgZTpWaXNpb24gdGFibGUgd2lkZ2V0cyAoRGF0YXRhYmxlcyBhbmQgVGFibGVzYXcpIHRvIHRhYmxlcyB3aGVuIHRoZSByZWxldmFudCBIVE1MNSBkYXRhIGF0dHJpYnV0ZXMgYXJlIHNwZWNpZmllZA0KLy8gQWRkZWQgaW4gOTEwLjEgLSBhY2NlcHRzIHRydWUgb3IgZmFsc2UgKHRvIGVuYWJsZSBvciBkaXNhYmxlIHJlc3BlY3RpdmVseSkNCnZhciBzaXRzX2F1dG9fdGFibGVfd2lkZ2V0cyA9IHRydWU7DQoNCi8vIERlZmluZXMgd2hldGhlciBEYXRhVGFibGVzIHNob3VsZCB1c2UgdGhlaXIgcmVzcG9uc2l2ZSBtb2RlIChpZiBhdmFpbGFibGUpIGJ5IGRlZmF1bHQuIFRoaXMgYXBwbGllcyB3aGVuIHRoZSByZXNwb25zaXZlIG1vZGUgaXNuJ3QgZXhwbGljaXRseSBzZXQgZm9yIGEgcGFydGljdWxhciB0YWJsZSAoaWYgaXQgd2FzIHRoZW4gaXQgd291bGQgb3ZlcnJpZGUgdGhpcyBzZXR0aW5nKQ0KLy8gQWRkZWQgaW4gOTEwLjEgLSBhY2NlcHRzIHRydWUgb3IgZmFsc2UgKHRvIGVuYWJsZSBvciBkaXNhYmxlIHJlc3BlY3RpdmVseSkNCnZhciBzaXRzX2RhdGF0YWJsZV9yZXNwb25zaXZlID0gdHJ1ZTsNCg0KLy8gRGVmaW5lcyBhbnkgc2NhbGUgZmFjdG9ycyB0byBhcHBseSB0byBkaWFsb2dzIChwcm9kdWNlZCBieSBzaXRzX2RpYWxvZykgZm9yIGVhY2ggYnJlYWtwb2ludC4gRm9yIGV4YW1wbGUsIGlmIGEgZGlhbG9nIGlzIG5vcm1hbGx5IDQwJSBvZiB0aGUgc2NyZWVuIHdpZHRoIGZvciB0aGUgTGFyZ2UgKGxnKQ0KLy8gYnJlYWtwb2ludCB0aGVuIHdlIGNvdWxkIHVzZSBhIHNjYWxlIGZhY3RvciBvZiAyIHRvIG1ha2UgaXQgODAlIGF0IHRoZSBtZWRpdW0gYnJlYWtwb2ludC4gSXQgY29uc2lzdHMgb2YgYW4gb2JqZWN0IGxpc3RpbmcgZmFjdG9ycyBmb3IgZWFjaCBicmVha3BvaW50LCBidXQgbm8gZGlhbG9nIHdpbGwgZXZlciBiZQ0KLy8gbW9yZSB0aGFuIDEwMCUgb2YgdGhlIHNjcmVlbi13aWR0aC4gQWRkZWQgaW4gOTEwLjEuDQp2YXIgc2l0c19kaWFsb2dfc2NhbGluZyA9IHsibGciOiAxLCAibWQiOiAxLjEsICJzbSI6IDEuNSwgInhzIjogM307DQoNCi8vIERlZmluZWQgd2hldGhlciB0aGUgaGVpZ2h0IG9mIGEgZGlhbG9nIHNob3VsZCwgYnkgZGVmYXVsdCwgYnkgbGltaXRlZCB0byBiZSBubyBtb3JlIHRoYW4gYSBjZXJ0YWluIHBlcmNlbnRhZ2Ugb2YgdGhlIHNjcmVlbiBoZWlnaHQgYXQgZWFjaCBicmVha3BvaW50LiBGb3IgZXhhbXBsZSwgdGhlIGRlZmF1bHQgb2YNCi8vIDAuOTUgd291bGQgbWVhbiB0aGF0IHRoZSBkaWFsb2dzIHdpbGwgYmUgaW5pdGlhbGx5IHNob3duIGF0IG5vIG1vcmUgdGhhbiA5NSUgb2YgdGhlIGhlaWdodCBvZiB0aGUgcGFnZSAoaS5lLiB3aWxsIGZpdCBvbiBzY3JlZW4pLCBhbmQgMTAgd291bGQgbWVhbiB0aGF0IHRoZXkgY2FuIGJlIDEwIHRpbWVzIHRoZSBoZWlnaHQgb2YgdGhlIHNjcmVlbi4gWW91IGNhbg0KLy8gdXNlICIiIHRvIGRpc2FibGUgdGhlIGxpbWl0IGZvciBhIHBhcnRpY3VsYXIgYnJlYWtwb2ludC4NCi8vIEl0IGNvbnNpc3RzIG9mIGFuIG9iamVjdCBsaXN0aW5nIG1heGltdW0gcmF0aW9zIGZvciBlYWNoIGJyZWFrcG9pbnQuIEFkZGVkIGluIDkxMC4xDQp2YXIgc2l0c19kaWFsb2dfaGVpZ2h0ID0geyJsZyI6IDAuOTUsICJtZCI6IDAuOTUsICJzbSI6ICIiLCAieHMiOiAiIn07DQoNCi8vIERlZmluZXMgd2hldGhlciBjZXJ0YWluIGFjdGlvbnMgc2hvdWxkIGhhcHBlbiBhdXRvbWF0aWNhbGx5IG9uIHNjcmVlbiByZXNpemUgKGluY2x1ZGluZyBkaWFsb2cgcmUtcG9zaXRpb25pbmcgYW5kIHJlc2NhbGluZykuIEFkZGVkIGluIDkxMC4xIC0gYWNjZXB0cyB0cnVlICh0byBhbHdheXMgcHJvY2VzcyBhcyB0aGUgc2NyZWVuIHJlc2l6ZXMgLSBkZWZhdWx0KSwgYW5kIGZhbHNlICh0byBkaXNhYmxlKQ0KdmFyIHNpdHNfYXV0b19yZXNpemUgPSB0cnVlOw0KDQovLyBEZWZpbmVzIHdoZXRoZXIgdG8gdXNlIHRoZSBzdi1wb3J0YWwuY3NzIHN0eWxlc2hlZXQgd2hlbiBzaG93aW5nIG11bHRpcGxlIGNvbHVtbnMgaW4gdGhlIHBvcnRhbC4gVGhlIHN0eWxlc2hlZXQgb3ZlcnJpZGVzIGNlcnRhaW4gYnJlYWtwb2ludHMgd2hlbiBzaG93aW5nIGNvbnRhaW5lciBvcHRpb25zIGluDQovLyBjb250ZW50IG1vZGUsIHdoaWNoIGNhbiBpbXByb3ZlIHRoZSBsb29rIGFuZCBmZWVsIG9mIHRoZSBjb250ZW50IG9uIHNvbWUgc2NyZWVuIHNpemVzLCBhbmQgd2lsbCBvbmx5IGJlIGxvYWRlZCB3aGVuIG5lZWRlZC4gQWRkZWQgaW4gOTEwLjEgLSBhY2NlcHRzIHRydWUgb3IgZmFsc2UgKHRvIGVuYWJsZSBvciBkaXNhYmxlIHJlc3BlY3RpdmVseSwgd2l0aCB0cnVlIHRoZSBkZWZhdWx0KQ0KdmFyIHNpdHNfdXNlX3BvcnRhbF9jc3MgPSB0cnVlOw0KDQovLyBEZWZpbmVzIHRoZSBtaW5pbXVtIHNpemUgZm9yIHRhYnMgdG8gYmUgcmVzaXplZCB0byBpbiBwaXhlbHMgKGFkZGVkIGluIDkyMC4xKQ0KLy8gRGVmYXVsdCB2YWx1ZSBpcyAxNTAuDQp2YXIgc2l0c19taW5fdGFiX3dpZHRoID0gMTUwOw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="4672671" offset="0" length="336" />
          <PacketInfo time="4672671" offset="336" length="2217" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3390" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/javascript/sits_ajax.js?v=881.2" url="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/javascript/sits_ajax.js?v=881.2" ip="129.128.12.43" port="443" connectionId="45" origin="HTML" frame="1" startDateTime="2018-10-18T20:32:39.302-04:00" startTime="4672687" endTime="4672687">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>dj04ODEuMg==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="v" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ODgxLjI=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2s=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9qYXZhc2NyaXB0L3NpdHNfYWpheC5qcz92PTg4MS4yIEhUVFAvMS4xDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4wDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbi1HQixlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpSZWZlcmVyOiBodHRwczovL2dyYWR1YXRlLXN0dWRpZXMtYXBwbHktdGVzdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL3Npd19wb3J0YWwudXJsP0MwNkIzMDNDNUY2MjRENDRCb1Raa2lVOTFOZloxWXlNdEF1bmRZQjhyR0RRa0dtelZOOGMxcURnT3pqZ2U5OHhOVFQzZ1MwZ21oUVVSNklxRU9pWkJvUUZkaHpiMTRFRko3STRnbWJ2X0EzVlVYZXZTbWZkZFF1Y0kzaw0KQ29va2llOiBKU0VTU0lPTklEPUNFODk3RkI0Q0UwMTVBQjZFREQ1RjYxNUI3M0NFMDQ1OyBCSUdpcFNlcnZlclNJVFMtVGVzdC5hcHB+U0lUUy1UZXN0X3Bvb2w9MTMxMDg1NzkwMC4zNjg5NS4wMDAwOyBCSUdpcFNlcnZlclNoYXJlZElJUy1ERVY9NzczOTg2OTg4LjIwNDgwLjAwMDANCkROVDogMQ0KSG9zdDogZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>63721</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxNCBKdWwgMjAxNyAyMjoyOToyMSBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjgwNzY1OGEzZjBmY2QyMTowIg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0FNRU9SSUdJTg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NjM3MjE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkxhc3QtTW9kaWZpZWQ6IEZyaSwgMTQgSnVsIDIwMTcgMjI6Mjk6MjEgR01UDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KRVRhZzogIjgwNzY1OGEzZjBmY2QyMTowIg0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpTZXJ2ZXI6IE1pY3Jvc29mdC1JSVMvOC41DQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNClgtRnJhbWUtT3B0aW9uczogU0FNRU9SSUdJTg0KRGF0ZTogRnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQNCkNvbnRlbnQtTGVuZ3RoOiA2MzcyMQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="4672687" offset="0" length="338" />
          <PacketInfo time="4672687" offset="338" length="63721" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3395" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/javascript/siw_intray_con_rsp.js" url="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/javascript/siw_intray_con_rsp.js" ip="129.128.12.43" port="443" connectionId="46" origin="HTML" frame="1" startDateTime="2018-10-18T20:32:39.344-04:00" startTime="4672765" endTime="4672765">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2s=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9qYXZhc2NyaXB0L3Npd19pbnRyYXlfY29uX3JzcC5qcyBIVFRQLzEuMQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA0KQWNjZXB0OiAqLyoNCkFjY2VwdC1MYW5ndWFnZTogZW4tR0IsZW47cT0wLjUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KUmVmZXJlcjogaHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2sNCkNvb2tpZTogSlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAwDQpETlQ6IDENCkhvc3Q6IGdyYWR1YXRlLXN0dWRpZXMtYXBwbHktdGVzdC51YWxiZXJ0YS5jYQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>1026</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAyNiBPY3QgMjAxNSAyMjozODozMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjBmNzkxOTNmMTBkMTE6MCI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0FNRU9SSUdJTg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTAyNg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkxhc3QtTW9kaWZpZWQ6IE1vbiwgMjYgT2N0IDIwMTUgMjI6Mzg6MzAgR01UDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KRVRhZzogIjBmNzkxOTNmMTBkMTE6MCINClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KU2VydmVyOiBNaWNyb3NvZnQtSUlTLzguNQ0KWC1Qb3dlcmVkLUJ5OiBBU1AuTkVUDQpYLUZyYW1lLU9wdGlvbnM6IFNBTUVPUklHSU4NCkRhdGU6IEZyaSwgMTkgT2N0IDIwMTggMDA6MzI6MTQgR01UDQpDb250ZW50LUxlbmd0aDogMTAyNg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ICBmdW5jdGlvbiBzdl9sb2FkX2ludHJheShpbnRyYXlwYXJhbXMpeyANCiAgICB2YXIgZGl2aWQgPSBpbnRyYXlwYXJhbXMuRElWSUQ7ICANCiAgICAkKCIjIitzaXRzX2RvX2dldF9vYmplY3QoZGl2aWQpKS5kYXRhKCJpbnRyYXlwYXJhbXMiLGludHJheXBhcmFtcykucHJlcGVuZChpbnRyYXlwYXJhbXMuSU1HMSsiICIrc2l0c193aWRnZXRfYnAudWkubG9hZGluZyk7ICAgICAgICAgIA0KICAgICQoIiMiK3NpdHNfZG9fZ2V0X29iamVjdChkaXZpZCkpLmZpbmQoImRpdi5zdi1yb3c6Zmlyc3QiKS5jc3MoInZpc2liaWxpdHkiLCJoaWRkZW4iKTsNCiAgICB2YXIgbGlzdCA9ICJOS0VZPSIraW50cmF5cGFyYW1zLk5LRVkrIiZNSFZfQ09ERT0iK3NpdHNfZXNjYXBlX3VybChpbnRyYXlwYXJhbXMuTUhWQyk7DQogICAgbGlzdCArPSAiJlBBR0U9IitpbnRyYXlwYXJhbXMuUEFHRSsiJk9SRFI9IitpbnRyYXlwYXJhbXMuT1JEUjsNCiAgICBsaXN0ICs9ICImSVNTQz0iK2ludHJheXBhcmFtcy5JU1NDKyImRElWSUQ9IitpbnRyYXlwYXJhbXMuRElWSUQ7DQogICAgc2l0c19zZW5kX3F1ZXJ5KCJQT1NUIiwiU0lXX0lOVFJBWS5nZXRpbnRyYXkiLGxpc3QsZmFsc2UsInN2X2ludHJheV9yZXR1cm4iKTsgICAgICAgIA0KICAgIHJldHVybjsNCiAgfSAgIA0KICBmdW5jdGlvbiBzdl9pbnRyYXlfcmV0dXJuKHJlc3BvbnNlKXsNCiAgICB2YXIgb2JqPSB7fTsNCiAgICBpZiAoIHJlc3BvbnNlID09ICIiICl7DQogICAgICByZXR1cm47DQogICAgfQ0KICAgIG9iaiA9IHNpdHNfcGFyc2VfanNvbihyZXNwb25zZSk7ICAgIA0KICAgIGlmICggdHlwZW9mKG9iaikgIT0gIm9iamVjdCIpew0KICAgICAgcmV0dXJuOw0KICAgIH0NCiAgICAkKCIjIitvYmouRElWSUQpLmRhdGEoIlRBQkxFSUQiLG9iai5UQUJMRUlEKS5odG1sKG9iai5IVE1MKTsNCiAgICAkKCIjIitvYmouVEFCTEVJRCkuZGF0YSgiRElWSUQiLG9iai5ESVZJRCk7ICAgIA0KICAgICQoIiNpbnRyYXlfcGFuZWxfIitvYmouVEFCTEVJRCkuZGF0YSgiRElWSUQiLG9iai5ESVZJRCkgIDsgICANCiAgICB2YXIgaW50cmF5cGFyYW1zID0ge307DQogICAgaW50cmF5cGFyYW1zID0gJCgiIyIrb2JqLkRJVklEKS5kYXRhKCJpbnRyYXlwYXJhbXMiKTsNCiAgICBzaXRzX3RhYmxlc2F3X3dpZGdldCgiIyIrb2JqLlRBQkxFSUQsIiIpOw0KICAgIHZhciByZWZyZXNoID0gaW50cmF5cGFyYW1zLlJFRlJFU0ggfHwgNjAwMDA7IC8vIGRlZmF1bHQgcmVmcmVzaCB0byA2MCBzZWNvbmRzDQogICAgc2V0VGltZW91dChmdW5jdGlvbigpeyBzdl9pbnRyYXlfcmVmcmVzaChvYmouVEFCTEVJRCk7fSxyZWZyZXNoKTsNCiAgfSAgDQogIGZ1bmN0aW9uIHN2X2ludHJheV9jaGFuZ2VwYWdlKHBhZ2UsVEFCTEVJRCl7DQogICAgdmFyIGRpdmlkID0gZ2V0ZGl2aWQoVEFCTEVJRCk7ICANCiAgICB2YXIgaW50cmF5cGFyYW1zID0ge307DQogICAgaW50cmF5cGFyYW1zID0gJCgiIyIrZGl2aWQpLmRhdGEoImludHJheXBhcmFtcyIpOw0KICAgIGludHJheXBhcmFtcy5QQUdFID0gcGFnZTsNCiAgICBzdl9sb2FkX2ludHJheShpbnRyYXlwYXJhbXMpICAgIDsNCiAgfQ0KICBmdW5jdGlvbiBzdl9pbnRyYXlfcmVmcmVzaChUQUJMRUlEKXsNCiAgICB2YXIgZGl2aWQgPSBnZXRkaXZpZChUQUJMRUlEKTsgIA0KICAgIHZhciBpbnRyYXlwYXJhbXMgPSB7fTsNCiAgICBpbnRyYXlwYXJhbXMgPSAkKCIjIitkaXZpZCkuZGF0YSgiaW50cmF5cGFyYW1zIik7DQogICAgaWYgKHR5cGVvZihpbnRyYXlwYXJhbXMpID09ICJvYmplY3QiKXsNCiAgICAgIHN2X2xvYWRfaW50cmF5KGludHJheXBhcmFtcykgICAgIDsNCiAgICB9DQogIH0NCiAgZnVuY3Rpb24gc3ZfaW50cmF5X3N3aXRjaHZpZXcoc2VsLFRBQkxFSUQpew0KICAgIHZhciBkaXZpZCA9IGdldGRpdmlkKFRBQkxFSUQpOyAgDQogICAgdmFyIHZhbCA9ICQoc2VsKS52YWwoKTsNCiAgICB2YXIgaW50cmF5cGFyYW1zID0ge307DQogICAgaW50cmF5cGFyYW1zID0gJCgiIyIrZGl2aWQpLmRhdGEoImludHJheXBhcmFtcyIpOw0KICAgIGlmICh0eXBlb2YoaW50cmF5cGFyYW1zKSA9PSAib2JqZWN0Iil7DQogICAgICBpbnRyYXlwYXJhbXMuTUhWQyA9IHZhbDsNCiAgICAgIGludHJheXBhcmFtcy5PUkRSID0gIiI7DQogICAgICBpbnRyYXlwYXJhbXMuUEFHRSA9IDE7DQogICAgICBzdl9sb2FkX2ludHJheShpbnRyYXlwYXJhbXMpOw0KICAgIH0gICAgIA0KICB9ICANCiAgZnVuY3Rpb24gZ2V0ZGl2aWQoVEFCTEVJRCl7DQogICAgdmFyIGRpdmlkID0gJCgiIyIrVEFCTEVJRCkuZGF0YSgiRElWSUQiKSB8fCAgJCgiI2ludHJheV9wYW5lbF8iK1RBQkxFSUQpLmRhdGEoIkRJVklEIikgOw0KICAgIHJldHVybiBkaXZpZDsNCiAgfSAgICAgIA0KICBmdW5jdGlvbiBzdl9pbnRyYXlfc29ydHZpZXcoc3J0LFRBQkxFSUQpew0KICAgIHZhciBkaXZpZCA9IGdldGRpdmlkKFRBQkxFSUQpOyAgDQogICAgdmFyIGludHJheXBhcmFtcyA9IHt9Ow0KICAgIGludHJheXBhcmFtcyA9ICQoIiMiK2RpdmlkKS5kYXRhKCJpbnRyYXlwYXJhbXMiKTsNCiAgICBpZiAodHlwZW9mKGludHJheXBhcmFtcykgPT0gIm9iamVjdCIpew0KICAgICAgaW50cmF5cGFyYW1zLk9SRFIgPSBzcnQ7DQogICAgICBpbnRyYXlwYXJhbXMuUEFHRSA9IDE7DQogICAgICBzdl9sb2FkX2ludHJheShpbnRyYXlwYXJhbXMpOw0KICAgIH0gICAgIA0KICB9ICANCiANCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="4672765" offset="0" length="335" />
          <PacketInfo time="4672765" offset="335" length="1026" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3400" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/css/uoa-sits.css" url="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/css/uoa-sits.css" ip="129.128.12.43" port="443" connectionId="47" origin="HTML" frame="1" startDateTime="2018-10-18T20:32:39.392-04:00" startTime="4672796" endTime="4672796">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3MsKi8qO3E9MC4x</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2s=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9jc3MvdW9hLXNpdHMuY3NzIEhUVFAvMS4xDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4wDQpBY2NlcHQ6IHRleHQvY3NzLCovKjtxPTAuMQ0KQWNjZXB0LUxhbmd1YWdlOiBlbi1HQixlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpSZWZlcmVyOiBodHRwczovL2dyYWR1YXRlLXN0dWRpZXMtYXBwbHktdGVzdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL3Npd19wb3J0YWwudXJsP0MwNkIzMDNDNUY2MjRENDRCb1Raa2lVOTFOZloxWXlNdEF1bmRZQjhyR0RRa0dtelZOOGMxcURnT3pqZ2U5OHhOVFQzZ1MwZ21oUVVSNklxRU9pWkJvUUZkaHpiMTRFRko3STRnbWJ2X0EzVlVYZXZTbWZkZFF1Y0kzaw0KQ29va2llOiBKU0VTU0lPTklEPUNFODk3RkI0Q0UwMTVBQjZFREQ1RjYxNUI3M0NFMDQ1OyBCSUdpcFNlcnZlclNJVFMtVGVzdC5hcHB+U0lUUy1UZXN0X3Bvb2w9MTMxMDg1NzkwMC4zNjg5NS4wMDAwOyBCSUdpcFNlcnZlclNoYXJlZElJUy1ERVY9NzczOTg2OTg4LjIwNDgwLjAwMDANCkROVDogMQ0KSG9zdDogZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>11008</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9jc3M=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAxNCBKdW4gMjAxOCAxNzoxNzo1MCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ImI0ZmI4MjlmMzRkNDE6MCI=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0FNRU9SSUdJTg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTEwMDg=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IHRleHQvY3NzDQpDb250ZW50LUVuY29kaW5nOiBnemlwDQpMYXN0LU1vZGlmaWVkOiBUaHUsIDE0IEp1biAyMDE4IDE3OjE3OjUwIEdNVA0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkVUYWc6ICJiNGZiODI5ZjM0ZDQxOjAiDQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNClNlcnZlcjogTWljcm9zb2Z0LUlJUy84LjUNClgtUG93ZXJlZC1CeTogQVNQLk5FVA0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpEYXRlOiBGcmksIDE5IE9jdCAyMDE4IDAwOjMyOjE0IEdNVA0KQ29udGVudC1MZW5ndGg6IDExMDA4DQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="4672796" offset="0" length="322" />
          <PacketInfo time="4672812" offset="322" length="11008" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3405" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/images/siw_portal_close.png" url="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/images/siw_portal_close.png" ip="129.128.12.43" port="443" connectionId="48" origin="HTML" frame="1" startDateTime="2018-10-18T20:32:39.416-04:00" startTime="4673046" endTime="4673046">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2s=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9pbWFnZXMvc2l3X3BvcnRhbF9jbG9zZS5wbmcgSFRUUC8xLjENClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBydjo2Mi4wKSBHZWNrby8yMDEwMDEwMSBGaXJlZm94LzYyLjANCkFjY2VwdDogKi8qDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLUdCLGVuO3E9MC41DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNClJlZmVyZXI6IGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9ydW4vc2l3X3BvcnRhbC51cmw/QzA2QjMwM0M1RjYyNEQ0NEJvVFpraVU5MU5mWjFZeU10QXVuZFlCOHJHRFFrR216Vk44YzFxRGdPempnZTk4eE5UVDNnUzBnbWhRVVI2SXFFT2laQm9RRmRoemIxNEVGSjdJNGdtYnZfQTNWVVhldlNtZmRkUXVjSTNrDQpDb29raWU6IEpTRVNTSU9OSUQ9Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU7IEJJR2lwU2VydmVyU0lUUy1UZXN0LmFwcH5TSVRTLVRlc3RfcG9vbD0xMzEwODU3OTAwLjM2ODk1LjAwMDA7IEJJR2lwU2VydmVyU2hhcmVkSUlTLURFVj03NzM5ODY5ODguMjA0ODAuMDAwMA0KRE5UOiAxDQpIb3N0OiBncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2ENCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>395</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvcG5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAyMSBTZXAgMjAxNSAyMTo0NDo1MCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjBiNWQ3YmRiNmY0ZDAxOjAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0FNRU9SSUdJTg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Mzk1</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL3BuZw0KTGFzdC1Nb2RpZmllZDogTW9uLCAyMSBTZXAgMjAxNSAyMTo0NDo1MCBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpFVGFnOiAiMGI1ZDdiZGI2ZjRkMDE6MCINClNlcnZlcjogTWljcm9zb2Z0LUlJUy84LjUNClgtUG93ZXJlZC1CeTogQVNQLk5FVA0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpEYXRlOiBGcmksIDE5IE9jdCAyMDE4IDAwOjMyOjE0IEdNVA0KQ29udGVudC1MZW5ndGg6IDM5NQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC42/Ixj3wAAAQlJREFUSEvt1KEWAUEYBeCNgiAIgkcQBdEDiILoMTS6KAoeQPAQou2iIAiCIArj3mGde8ZvdoKV/Od854zZnbn8ZjdzzmV5nk+rwL395hxUgXv/A6JiAR0YiwHo9RrodeKc3hMNaMIZtLpQXJ9xQmoFut6LBdAQtLbA+RZcOfGsEzQgXF8aQGvQGsHyMXwVv4i1NikgbNURbo+hrw1Y67yUAApbVdQF2mCt8VIDaAdhTcC69yU1oA9W7eHtaKqUgDoc4FPNwVrnpQQsQIufNZB/eA+staUBYWu4MX8Rn2qtj62KBVit0dcFj6eW2apYQNia8LzzeOrTbLYqFvAV/4BSvwkoBlVwzmV3gG4ORplD1IIAAAAASUVORK5CYII=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="4673046" offset="0" length="275" />
          <PacketInfo time="4673046" offset="275" length="395" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3410" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/images/siw_portal_min.png" url="https://graduate-studies-apply-test.ualberta.ca/urd/sits.urd/images/siw_portal_min.png" ip="129.128.12.43" port="443" connectionId="49" origin="HTML" frame="1" startDateTime="2018-10-18T20:32:39.429-04:00" startTime="4673062" endTime="4673062">
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2s=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD1DRTg5N0ZCNENFMDE1QUI2RURENUY2MTVCNzNDRTA0NTsgQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9pbWFnZXMvc2l3X3BvcnRhbF9taW4ucG5nIEhUVFAvMS4xDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4wDQpBY2NlcHQ6ICovKg0KQWNjZXB0LUxhbmd1YWdlOiBlbi1HQixlbjtxPTAuNQ0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpSZWZlcmVyOiBodHRwczovL2dyYWR1YXRlLXN0dWRpZXMtYXBwbHktdGVzdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL3Npd19wb3J0YWwudXJsP0MwNkIzMDNDNUY2MjRENDRCb1Raa2lVOTFOZloxWXlNdEF1bmRZQjhyR0RRa0dtelZOOGMxcURnT3pqZ2U5OHhOVFQzZ1MwZ21oUVVSNklxRU9pWkJvUUZkaHpiMTRFRko3STRnbWJ2X0EzVlVYZXZTbWZkZFF1Y0kzaw0KQ29va2llOiBKU0VTU0lPTklEPUNFODk3RkI0Q0UwMTVBQjZFREQ1RjYxNUI3M0NFMDQ1OyBCSUdpcFNlcnZlclNJVFMtVGVzdC5hcHB+U0lUUy1UZXN0X3Bvb2w9MTMxMDg1NzkwMC4zNjg5NS4wMDAwOyBCSUdpcFNlcnZlclNoYXJlZElJUy1ERVY9NzczOTg2OTg4LjIwNDgwLjAwMDANCkROVDogMQ0KSG9zdDogZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhDQoNCg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>Q0U4OTdGQjRDRTAxNUFCNkVERDVGNjE1QjczQ0UwNDU=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>222</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aW1hZ2UvcG5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW9uLCAyMSBTZXAgMjAxNSAxODo1OTozNiBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>IjA1Y2EzYTg5ZmY0ZDAxOjAi</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0FNRU9SSUdJTg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxNCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MjIy</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGltYWdlL3BuZw0KTGFzdC1Nb2RpZmllZDogTW9uLCAyMSBTZXAgMjAxNSAxODo1OTozNiBHTVQNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpFVGFnOiAiMDVjYTNhODlmZjRkMDE6MCINClNlcnZlcjogTWljcm9zb2Z0LUlJUy84LjUNClgtUG93ZXJlZC1CeTogQVNQLk5FVA0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpEYXRlOiBGcmksIDE5IE9jdCAyMDE4IDAwOjMyOjE0IEdNVA0KQ29udGVudC1MZW5ndGg6IDIyMg0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwQAADsEBuJFr7QAAABh0RVh0U29mdHdhcmUAcGFpbnQubmV0IDQuMC42/Ixj3wAAAFxJREFUSEvtzTEOgCAQRFFu7tXsbPYGNt5kYBULGgYJ25gxeXEb5if/zGyLAOAZ9yOCbyvQpQClAKUA9e/AXpzFUW/mqv9mZyTgD0d9DsxodnqBJRSg7sB7RACQMh4izut48hbIAAAAAElFTkSuQmCC</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="4673062" offset="0" length="275" />
          <PacketInfo time="4673078" offset="275" length="222" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
    <HTTPTask id="3420" hostname="graduate-studies-apply-test.ualberta.ca" path="https://graduate-studies-apply-test.ualberta.ca/api/emergencymessage.json?_=1539909134672" url="https://graduate-studies-apply-test.ualberta.ca/api/emergencymessage.json?_=1539909134672" ip="129.128.12.43" port="443" connectionId="51" origin="HTML" frame="1" startDateTime="2018-10-18T20:32:39.466-04:00" startTime="4676578" endTime="4676578">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>Xz0xNTM5OTA5MTM0Njcy</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="_" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTUzOTkwOTEzNDY3Mg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="User-Agent" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV09XNjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vanNvbiwgdGV4dC9qYXZhc2NyaXB0LCAqLyo7IHE9MC4wMQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Referer" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2s=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Type" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vanNvbg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Requested-With" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>WE1MSHR0cFJlcXVlc3Q=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="DNT" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNh</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIGh0dHBzOi8vZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS10ZXN0LnVhbGJlcnRhLmNhL2FwaS9lbWVyZ2VuY3ltZXNzYWdlLmpzb24/Xz0xNTM5OTA5MTM0NjcyIEhUVFAvMS4xDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXT1c2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4wDQpBY2NlcHQ6IGFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdCwgKi8qOyBxPTAuMDENCkFjY2VwdC1MYW5ndWFnZTogZW4tR0IsZW47cT0wLjUNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZQ0KUmVmZXJlcjogaHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXRlc3QudWFsYmVydGEuY2EvdXJkL3NpdHMudXJkL3J1bi9zaXdfcG9ydGFsLnVybD9DMDZCMzAzQzVGNjI0RDQ0Qm9UWmtpVTkxTmZaMVl5TXRBdW5kWUI4ckdEUWtHbXpWTjhjMXFEZ096amdlOTh4TlRUM2dTMGdtaFFVUjZJcUVPaVpCb1FGZGh6YjE0RUZKN0k0Z21idl9BM1ZVWGV2U21mZGRRdWNJM2sNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vanNvbg0KWC1SZXF1ZXN0ZWQtV2l0aDogWE1MSHR0cFJlcXVlc3QNCkNvb2tpZTogQklHaXBTZXJ2ZXJTSVRTLVRlc3QuYXBwflNJVFMtVGVzdF9wb29sPTEzMTA4NTc5MDAuMzY4OTUuMDAwMDsgQklHaXBTZXJ2ZXJTaGFyZWRJSVMtREVWPTc3Mzk4Njk4OC4yMDQ4MC4wMDAwDQpETlQ6IDENCkhvc3Q6IGdyYWR1YXRlLXN0dWRpZXMtYXBwbHktdGVzdC51YWxiZXJ0YS5jYQ0KDQo=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="BIGipServerSITS-Test.app~SITS-Test_pool" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTMxMDg1NzkwMC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-DEV" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzczOTg2OTg4LjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>1245</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>dGV4dC9odG1s</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Frame-Options" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>U0FNRU9SSUdJTg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>RnJpLCAxOSBPY3QgMjAxOCAwMDozMjoxOCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTI0NQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgNDA0IE5vdCBGb3VuZA0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWwNClNlcnZlcjogTWljcm9zb2Z0LUlJUy84LjUNClgtUG93ZXJlZC1CeTogQVNQLk5FVA0KWC1GcmFtZS1PcHRpb25zOiBTQU1FT1JJR0lODQpEYXRlOiBGcmksIDE5IE9jdCAyMDE4IDAwOjMyOjE4IEdNVA0KQ29udGVudC1MZW5ndGg6IDEyNDUNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PCFET0NUWVBFIGh0bWwgUFVCTElDICItLy9XM0MvL0RURCBYSFRNTCAxLjAgU3RyaWN0Ly9FTiIgImh0dHA6Ly93d3cudzMub3JnL1RSL3hodG1sMS9EVEQveGh0bWwxLXN0cmljdC5kdGQiPg0KPGh0bWwgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWwiPg0KPGhlYWQ+DQo8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD1pc28tODg1OS0xIi8+DQo8dGl0bGU+NDA0IC0gRmlsZSBvciBkaXJlY3Rvcnkgbm90IGZvdW5kLjwvdGl0bGU+DQo8c3R5bGUgdHlwZT0idGV4dC9jc3MiPg0KPCEtLQ0KYm9keXttYXJnaW46MDtmb250LXNpemU6LjdlbTtmb250LWZhbWlseTpWZXJkYW5hLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO2JhY2tncm91bmQ6I0VFRUVFRTt9DQpmaWVsZHNldHtwYWRkaW5nOjAgMTVweCAxMHB4IDE1cHg7fSANCmgxe2ZvbnQtc2l6ZToyLjRlbTttYXJnaW46MDtjb2xvcjojRkZGO30NCmgye2ZvbnQtc2l6ZToxLjdlbTttYXJnaW46MDtjb2xvcjojQ0MwMDAwO30gDQpoM3tmb250LXNpemU6MS4yZW07bWFyZ2luOjEwcHggMCAwIDA7Y29sb3I6IzAwMDAwMDt9IA0KI2hlYWRlcnt3aWR0aDo5NiU7bWFyZ2luOjAgMCAwIDA7cGFkZGluZzo2cHggMiUgNnB4IDIlO2ZvbnQtZmFtaWx5OiJ0cmVidWNoZXQgTVMiLCBWZXJkYW5hLCBzYW5zLXNlcmlmO2NvbG9yOiNGRkY7DQpiYWNrZ3JvdW5kLWNvbG9yOiM1NTU1NTU7fQ0KI2NvbnRlbnR7bWFyZ2luOjAgMCAwIDIlO3Bvc2l0aW9uOnJlbGF0aXZlO30NCi5jb250ZW50LWNvbnRhaW5lcntiYWNrZ3JvdW5kOiNGRkY7d2lkdGg6OTYlO21hcmdpbi10b3A6OHB4O3BhZGRpbmc6MTBweDtwb3NpdGlvbjpyZWxhdGl2ZTt9DQotLT4NCjwvc3R5bGU+DQo8L2hlYWQ+DQo8Ym9keT4NCjxkaXYgaWQ9ImhlYWRlciI+PGgxPlNlcnZlciBFcnJvcjwvaDE+PC9kaXY+DQo8ZGl2IGlkPSJjb250ZW50Ij4NCiA8ZGl2IGNsYXNzPSJjb250ZW50LWNvbnRhaW5lciI+PGZpZWxkc2V0Pg0KICA8aDI+NDA0IC0gRmlsZSBvciBkaXJlY3Rvcnkgbm90IGZvdW5kLjwvaDI+DQogIDxoMz5UaGUgcmVzb3VyY2UgeW91IGFyZSBsb29raW5nIGZvciBtaWdodCBoYXZlIGJlZW4gcmVtb3ZlZCwgaGFkIGl0cyBuYW1lIGNoYW5nZWQsIG9yIGlzIHRlbXBvcmFyaWx5IHVuYXZhaWxhYmxlLjwvaDM+DQogPC9maWVsZHNldD48L2Rpdj4NCjwvZGl2Pg0KPC9ib2R5Pg0KPC9odG1sPg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
        <TcpPackets>
          <PacketInfo time="4676578" offset="0" length="189" />
          <PacketInfo time="4676578" offset="189" length="1245" />
        </TcpPackets>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>