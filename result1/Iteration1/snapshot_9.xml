<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="9">
  <HTTPTask id="58" hostname="graduate-studies-apply-uat.ualberta.ca" path="/urd/sits.urd/run/siw_portal.url?9192B33F403849DBS2Te582ZvZutFMfHPx_KuJHwmtj-lGO87EFHC1rlVvz0ry9GgzisOQfG-ff6al2Pn5o2SPoMb_Mv_aLDIeISnoYEJbdoc24aC2s4m8I4tJlYr48SIfHNwEi1l69LTccU" url="https://graduate-studies-apply-uat.ualberta.ca/urd/sits.urd/run/siw_portal.url?9192B33F403849DBS2Te582ZvZutFMfHPx_KuJHwmtj-lGO87EFHC1rlVvz0ry9GgzisOQfG-ff6al2Pn5o2SPoMb_Mv_aLDIeISnoYEJbdoc24aC2s4m8I4tJlYr48SIfHNwEi1l69LTccU" ip="127.0.0.1" port="8889" client_ip="127.0.0.1" client_port="62349" connectionId="2128" origin="Primary" encodingType="ANSI" startDateTime="2019-01-03T01:50:35.854-05:00" startTime="51848" endTime="62396" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>OTE5MkIzM0Y0MDM4NDlEQlMyVGU1ODJadlp1dEZNZkhQeF9LdUpId210ai1sR084N0VGSEMxcmxWdnowcnk5R2d6aXNPUWZHLWZmNmFsMlBuNW8yU1BvTWJfTXZfYUxESWVJU25vWUVKYmRvYzI0YUMyczRtOEk0dEpsWXI0OFNJZkhOd0VpMWw2OUxUY2NV</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>OTE5MkIzM0Y0MDM4NDlEQlMyVGU1ODJadlp1dEZNZkhQeF9LdUpId210ai1sR084N0VGSEMxcmxWdnowcnk5R2d6aXNPUWZHLWZmNmFsMlBuNW8yU1BvTWJfTXZfYUxESWVJU25vWUVKYmRvYzI0YUMyczRtOEk0dEpsWXI0OFNJZkhOd0VpMWw2OUxUY2NV</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXVhdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL3Npd19wb3J0YWwudXJsPzQwQUVCMTk2RDUwQTQyOTdyaHdZZERFcVd5dTgzVER5bjZiTnhaaXNXd0JXeTktanE3TUtLMnE5ekZweDZFQUVRdFRoeEVValpVYmI2bjlZQnVQRWdyU2RnTzQ3YVJjbXdCS25Td2hRdjJaLWFNWG4yN2w4eU8tRjhJUjZCLU1nQkhaMGFQT3BGdWtTME8zYg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS11YXQudWFsYmVydGEuY2E=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RVZJU0lPTkxPR0lOTEFORz07IEVWSVNJT05MT0dJTkhUVj07IEVWSVNJT05JRD0xNzY4OUU5RTQyNzU0MjMyQTFFQkQ3RjE5QTA0RDNFMTsgSlNFU1NJT05JRD03N0I4RkFCNTQzQjA4MTM3ODU3ODlBODcxNDA5NkVDMzsgQklHaXBTZXJ2ZXJTSVRTQVBQLVVBVC1IVFRQLmFwcH5TSVRTQVBQLVVBVC1IVFRQX3Bvb2w9MTEwOTUzMTMwOC4zNjg5NS4wMDAwOyBCSUdpcFNlcnZlclNoYXJlZElJUy1VQVQ9NzQwNDMyNTU2LjIwNDgwLjAwMDA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC91cmQvc2l0cy51cmQvcnVuL3Npd19wb3J0YWwudXJsPzkxOTJCMzNGNDAzODQ5REJTMlRlNTgyWnZadXRGTWZIUHhfS3VKSHdtdGotbEdPODdFRkhDMXJsVnZ6MHJ5OUdnemlzT1FmRy1mZjZhbDJQbjVvMlNQb01iX012X2FMREllSVNub1lFSmJkb2MyNGFDMnM0bThJNHRKbFlyNDhTSWZITndFaTFsNjlMVGNjVSBIVFRQLzEuMQ0KUmVmZXJlcjogaHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXVhdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL3Npd19wb3J0YWwudXJsPzQwQUVCMTk2RDUwQTQyOTdyaHdZZERFcVd5dTgzVER5bjZiTnhaaXNXd0JXeTktanE3TUtLMnE5ekZweDZFQUVRdFRoeEVValpVYmI2bjlZQnVQRWdyU2RnTzQ3YVJjbXdCS25Td2hRdjJaLWFNWG4yN2w4eU8tRjhJUjZCLU1nQkhaMGFQT3BGdWtTME8zYg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4wDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogZW4tR0IsZW47cT0wLjUNCkFjY2VwdDogKi8qDQpIb3N0OiBncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXVhdC51YWxiZXJ0YS5jYQ0KQ29va2llOiBFVklTSU9OTE9HSU5MQU5HPTsgRVZJU0lPTkxPR0lOSFRWPTsgRVZJU0lPTklEPTE3Njg5RTlFNDI3NTQyMzJBMUVCRDdGMTlBMDREM0UxOyBKU0VTU0lPTklEPTc3QjhGQUI1NDNCMDgxMzc4NTc4OUE4NzE0MDk2RUMzOyBCSUdpcFNlcnZlclNJVFNBUFAtVUFULUhUVFAuYXBwflNJVFNBUFAtVUFULUhUVFBfcG9vbD0xMTA5NTMxMzA4LjM2ODk1LjAwMDA7IEJJR2lwU2VydmVyU2hhcmVkSUlTLVVBVD03NDA0MzI1NTYuMjA0ODAuMDAwMA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="EVISIONLOGINLANG" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData />
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="EVISIONLOGINHTV" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData />
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="EVISIONID" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTc2ODlFOUU0Mjc1NDIzMkExRUJEN0YxOUEwNEQzRTE=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="JSESSIONID" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzdCOEZBQjU0M0IwODEzNzg1Nzg5QTg3MTQwOTZFQzM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="BIGipServerSITSAPP-UAT-HTTP.app~SITSAPP-UAT-HTTP_pool" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTEwOTUzMTMwOC4zNjg5NS4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="BIGipServerSharedIIS-UAT" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzQwNDMyNTU2LjIwNDgwLjAwMDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>26623</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Cache-Control" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGVueQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVJSLzMuMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVNQLk5FVA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwMyBKYW4gMjAxOSAwNjo1MDo0OCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjY2MjM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD1VVEYtOA0KRXhwaXJlczogVGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQNClgtRnJhbWUtT3B0aW9uczogZGVueQ0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1YU1MtUHJvdGVjdGlvbjogMTsgbW9kZT1ibG9jaw0KWC1Qb3dlcmVkLUJ5OiBBUlIvMy4wDQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IFRodSwgMDMgSmFuIDIwMTkgMDY6NTA6NDggR01UDQpDb250ZW50LUxlbmd0aDogMjY2MjMNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>