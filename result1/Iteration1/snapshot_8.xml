<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="8">
  <HTTPTask id="56" hostname="graduate-studies-apply-uat.ualberta.ca" path="/urd/sits.urd/run/SIW_YMHD.start_url?4647A8EF212F47F6CqdcnFPY1nFVZig0VS4zdwjPf_FSwekWHhzVo0Mzsmj4NY3KdTh0ZWo0HKOvB2Z5paGmZE1EeLoBwAXmyZdodmO1SeHL-RyY1PYUZaglGNeCGr7p_GRZPSqlArEgEtLTsXOTp29vE1hiJI7IeG0s4219rWMHy91rGIuCywi23uY" url="https://graduate-studies-apply-uat.ualberta.ca/urd/sits.urd/run/SIW_YMHD.start_url?4647A8EF212F47F6CqdcnFPY1nFVZig0VS4zdwjPf_FSwekWHhzVo0Mzsmj4NY3KdTh0ZWo0HKOvB2Z5paGmZE1EeLoBwAXmyZdodmO1SeHL-RyY1PYUZaglGNeCGr7p_GRZPSqlArEgEtLTsXOTp29vE1hiJI7IeG0s4219rWMHy91rGIuCywi23uY" ip="127.0.0.1" port="8889" client_ip="127.0.0.1" client_port="24767" connectionId="2144" origin="Primary" encodingType="ANSI" startDateTime="2019-01-02T13:26:47.161-05:00" startTime="41853" endTime="43887" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>NDY0N0E4RUYyMTJGNDdGNkNxZGNuRlBZMW5GVlppZzBWUzR6ZHdqUGZfRlN3ZWtXSGh6Vm8wTXpzbWo0TlkzS2RUaDBaV28wSEtPdkIyWjVwYUdtWkUxRWVMb0J3QVhteVpkb2RtTzFTZUhMLVJ5WTFQWVVaYWdsR05lQ0dyN3BfR1JaUFNxbEFyRWdFdExUc1hPVHAyOXZFMWhpSkk3SWVHMHM0MjE5cldNSHk5MXJHSXVDeXdpMjN1WQ==</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>NDY0N0E4RUYyMTJGNDdGNkNxZGNuRlBZMW5GVlppZzBWUzR6ZHdqUGZfRlN3ZWtXSGh6Vm8wTXpzbWo0TlkzS2RUaDBaV28wSEtPdkIyWjVwYUdtWkUxRWVMb0J3QVhteVpkb2RtTzFTZUhMLVJ5WTFQWVVaYWdsR05lQ0dyN3BfR1JaUFNxbEFyRWdFdExUc1hPVHAyOXZFMWhpSkk3SWVHMHM0MjE5cldNSHk5MXJHSXVDeXdpMjN1WQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Referer" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXVhdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL1NJV19UVFE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4w</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS11YXQudWFsYmVydGEuY2E=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>RVZJU0lPTkxPR0lOTEFORz07IEVWSVNJT05MT0dJTkhUVj07IEVWSVNJT05JRD05MjlFNkQwMjY0ODk0OTE1QTVGNjIyRDA5MjcwM0Q3OTsgSlNFU1NJT05JRD00OEExMUZDQThEQjkxQTQ2RjkzMjkyRjdFMEY2QkFGMzsgQklHaXBTZXJ2ZXJTSVRTQVBQLVVBVC1IVFRQLmFwcH5TSVRTQVBQLVVBVC1IVFRQX3Bvb2w9MTEwOTUzMTMwOC4zNjg5NS4wMDAwOyBCSUdpcFNlcnZlclNoYXJlZElJUy1VQVQ9NzU3MjA5NzcyLjIwNDgwLjAwMDA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC91cmQvc2l0cy51cmQvcnVuL1NJV19ZTUhELnN0YXJ0X3VybD80NjQ3QThFRjIxMkY0N0Y2Q3FkY25GUFkxbkZWWmlnMFZTNHpkd2pQZl9GU3dla1dIaHpWbzBNenNtajROWTNLZFRoMFpXbzBIS092QjJaNXBhR21aRTFFZUxvQndBWG15WmRvZG1PMVNlSEwtUnlZMVBZVVphZ2xHTmVDR3I3cF9HUlpQU3FsQXJFZ0V0TFRzWE9UcDI5dkUxaGlKSTdJZUcwczQyMTlyV01IeTkxckdJdUN5d2kyM3VZIEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwczovL2dyYWR1YXRlLXN0dWRpZXMtYXBwbHktdWF0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9ydW4vU0lXX1RUUQ0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4wDQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCkFjY2VwdC1MYW5ndWFnZTogZW4tR0IsZW47cT0wLjUNCkFjY2VwdDogKi8qDQpIb3N0OiBncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXVhdC51YWxiZXJ0YS5jYQ0KQ29va2llOiBFVklTSU9OTE9HSU5MQU5HPTsgRVZJU0lPTkxPR0lOSFRWPTsgRVZJU0lPTklEPTkyOUU2RDAyNjQ4OTQ5MTVBNUY2MjJEMDkyNzAzRDc5OyBKU0VTU0lPTklEPTQ4QTExRkNBOERCOTFBNDZGOTMyOTJGN0UwRjZCQUYzOyBCSUdpcFNlcnZlclNJVFNBUFAtVUFULUhUVFAuYXBwflNJVFNBUFAtVUFULUhUVFBfcG9vbD0xMTA5NTMxMzA4LjM2ODk1LjAwMDA7IEJJR2lwU2VydmVyU2hhcmVkSUlTLVVBVD03NTcyMDk3NzIuMjA0ODAuMDAwMA0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="EVISIONLOGINLANG" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData />
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="EVISIONLOGINHTV" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData />
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="EVISIONID" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>OTI5RTZEMDI2NDg5NDkxNUE1RjYyMkQwOTI3MDNENzk=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="JSESSIONID" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NDhBMTFGQ0E4REI5MUE0NkY5MzI5MkY3RTBGNkJBRjM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="BIGipServerSITSAPP-UAT-HTTP.app~SITSAPP-UAT-HTTP_pool" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTEwOTUzMTMwOC4zNjg5NS4wMDAw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="BIGipServerSharedIIS-UAT" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>NzU3MjA5NzcyLjIwNDgwLjAwMDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>20148</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Cache-Control" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sO2NoYXJzZXQ9VVRGLTg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Expires" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGVueQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-XSS-Protection" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVJSLzMuMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Powered-By" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QVNQLk5FVA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAwMiBKYW4gMjAxOSAxODoyNjo1MCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MjAxNDg=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Vary" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Encoding" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZSwgbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD1VVEYtOA0KRXhwaXJlczogVGh1LCAwMSBKYW4gMTk3MCAwMDowMDowMCBHTVQNClgtRnJhbWUtT3B0aW9uczogZGVueQ0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1YU1MtUHJvdGVjdGlvbjogMTsgbW9kZT1ibG9jaw0KWC1Qb3dlcmVkLUJ5OiBBUlIvMy4wDQpYLVBvd2VyZWQtQnk6IEFTUC5ORVQNCkRhdGU6IFdlZCwgMDIgSmFuIDIwMTkgMTg6MjY6NTAgR01UDQpDb250ZW50LUxlbmd0aDogMjAxNDgNClZhcnk6IEFjY2VwdC1FbmNvZGluZw0KQ29udGVudC1FbmNvZGluZzogZ3ppcA0KQ29ubmVjdGlvbjogS2VlcC1BbGl2ZQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
    <HTTPTask id="57" hostname="graduate-studies-apply-uat.ualberta.ca" path="/urd/sits.urd/javascript/siw_plupload.js?9.5.0.737196" url="https://graduate-studies-apply-uat.ualberta.ca/urd/sits.urd/javascript/siw_plupload.js?9.5.0.737196" ip="127.0.0.1" port="8889" client_ip="127.0.0.1" client_port="24867" connectionId="2168" origin="HTML" encodingType="ANSI" ordinal="1" startDateTime="2019-01-02T13:26:49.196-05:00" startTime="43888" endTime="44188" blockedTime="0" dnsTime="0" connectTime="0" sendTime="0" waitTime="0" receiveTime="0" sslNegotiateTime="0" responseBodySize="0">
      <QueryString>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>OS41LjAuNzM3MTk2</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </QueryString>
      <HTTPSplittedQueryStrings>
        <HTTPHeaderEntity name="" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>OS41LjAuNzM3MTk2</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
      </HTTPSplittedQueryStrings>
      <HTTPRequest method="GET">
        <HTTPHeaders>
          <HTTPHeaderEntity name="Referer" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>aHR0cHM6Ly9ncmFkdWF0ZS1zdHVkaWVzLWFwcGx5LXVhdC51YWxiZXJ0YS5jYS91cmQvc2l0cy51cmQvcnVuL1NJV19ZTUhELnN0YXJ0X3VybD80NjQ3QThFRjIxMkY0N0Y2Q3FkY25GUFkxbkZWWmlnMFZTNHpkd2pQZl9GU3dla1dIaHpWbzBNenNtajROWTNLZFRoMFpXbzBIS092QjJaNXBhR21aRTFFZUxvQndBWG15WmRvZG1PMVNlSEwtUnlZMVBZVVphZ2xHTmVDR3I3cF9HUlpQU3FsQXJFZ0V0TFRzWE9UcDI5dkUxaGlKSTdJZUcwczQyMTlyV01IeTkxckdJdUN5d2kyM3VZ</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="User-Agent" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NDsgcnY6NjIuMCkgR2Vja28vMjAxMDAxMDEgRmlyZWZveC82Mi4w</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Encoding" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Language" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZW4tR0IsZW47cT0wLjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ki8q</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Host" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3JhZHVhdGUtc3R1ZGllcy1hcHBseS11YXQudWFsYmVydGEuY2E=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Cookie" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SlNFU1NJT05JRD00OEExMUZDQThEQjkxQTQ2RjkzMjkyRjdFMEY2QkFGMzsgQklHaXBTZXJ2ZXJTSVRTQVBQLVVBVC1IVFRQLmFwcH5TSVRTQVBQLVVBVC1IVFRQX3Bvb2w9MTEwOTUzMTMwOC4zNjg5NS4wMDAwOyBCSUdpcFNlcnZlclNoYXJlZElJUy1VQVQ9NzU3MjA5NzcyLjIwNDgwLjAwMDA=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>R0VUIC91cmQvc2l0cy51cmQvamF2YXNjcmlwdC9zaXdfcGx1cGxvYWQuanM/OS41LjAuNzM3MTk2IEhUVFAvMS4xDQpSZWZlcmVyOiBodHRwczovL2dyYWR1YXRlLXN0dWRpZXMtYXBwbHktdWF0LnVhbGJlcnRhLmNhL3VyZC9zaXRzLnVyZC9ydW4vU0lXX1lNSEQuc3RhcnRfdXJsPzQ2NDdBOEVGMjEyRjQ3RjZDcWRjbkZQWTFuRlZaaWcwVlM0emR3alBmX0ZTd2VrV0hoelZvME16c21qNE5ZM0tkVGgwWldvMEhLT3ZCMlo1cGFHbVpFMUVlTG9Cd0FYbXlaZG9kbU8xU2VITC1SeVkxUFlVWmFnbEdOZUNHcjdwX0dSWlBTcWxBckVnRXRMVHNYT1RwMjl2RTFoaUpJN0llRzBzNDIxOXJXTUh5OTFyR0l1Q3l3aTIzdVkNClVzZXItQWdlbnQ6IE1vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQ7IHJ2OjYyLjApIEdlY2tvLzIwMTAwMTAxIEZpcmVmb3gvNjIuMA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLUdCLGVuO3E9MC41DQpBY2NlcHQ6ICovKg0KSG9zdDogZ3JhZHVhdGUtc3R1ZGllcy1hcHBseS11YXQudWFsYmVydGEuY2ENCkNvb2tpZTogSlNFU1NJT05JRD00OEExMUZDQThEQjkxQTQ2RjkzMjkyRjdFMEY2QkFGMzsgQklHaXBTZXJ2ZXJTSVRTQVBQLVVBVC1IVFRQLmFwcH5TSVRTQVBQLVVBVC1IVFRQX3Bvb2w9MTEwOTUzMTMwOC4zNjg5NS4wMDAwOyBCSUdpcFNlcnZlclNoYXJlZElJUy1VQVQ9NzU3MjA5NzcyLjIwNDgwLjAwMDANCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
          <HTTPCookies>
            <HTTPHeaderEntity name="JSESSIONID" index="0">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NDhBMTFGQ0E4REI5MUE0NkY5MzI5MkY3RTBGNkJBRjM=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSITSAPP-UAT-HTTP.app~SITSAPP-UAT-HTTP_pool" index="1">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>MTEwOTUzMTMwOC4zNjg5NS4wMDAw</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
            <HTTPHeaderEntity name="BIGipServerSharedIIS-UAT" index="2">
              <HTTPDataSet>
                <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                  <ActualData>NzU3MjA5NzcyLjIwNDgwLjAwMDA=</ActualData>
                </HTTPData>
              </HTTPDataSet>
              <IsExternalData>false</IsExternalData>
            </HTTPHeaderEntity>
          </HTTPCookies>
        </HTTPHeaders>
      </HTTPRequest>
      <HTTPResponse>
        <contentLenght>30887</contentLenght>
        <HTTPHeaders>
          <HTTPHeaderEntity name="Content-Type" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>YXBwbGljYXRpb24vamF2YXNjcmlwdA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Last-Modified" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>VGh1LCAxMyBKdWwgMjAxNyAyMTowOTowMCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Accept-Ranges" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Ynl0ZXM=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="ETag" index="3">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ImYxOTZlYTNmMWNmY2QyMTowIg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Server" index="4">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>TWljcm9zb2Z0LUlJUy84LjU=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="X-Powered-By" index="5">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QVNQLk5FVA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Date" index="6">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>V2VkLCAwMiBKYW4gMjAxOSAxODoyNjo1MCBHTVQ=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Length" index="7">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MzA4ODc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Vary" index="8">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>QWNjZXB0LUVuY29kaW5n</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Content-Encoding" index="9">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>Z3ppcA==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="Connection" index="10">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPAllHeaders>
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>SFRUUC8xLjEgMjAwIE9LDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2phdmFzY3JpcHQNCkxhc3QtTW9kaWZpZWQ6IFRodSwgMTMgSnVsIDIwMTcgMjE6MDk6MDAgR01UDQpBY2NlcHQtUmFuZ2VzOiBieXRlcw0KRVRhZzogImYxOTZlYTNmMWNmY2QyMTowIg0KU2VydmVyOiBNaWNyb3NvZnQtSUlTLzguNQ0KWC1Qb3dlcmVkLUJ5OiBBU1AuTkVUDQpEYXRlOiBXZWQsIDAyIEphbiAyMDE5IDE4OjI2OjUwIEdNVA0KQ29udGVudC1MZW5ndGg6IDMwODg3DQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNvbnRlbnQtRW5jb2Rpbmc6IGd6aXANCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCg0K</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPAllHeaders>
        </HTTPHeaders>
        <HTTPBody>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData></ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPBody>
      </HTTPResponse>
    </HTTPTask>
  </HTTPTask>
</HTTPSnapshot>